{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/Statistics.module.css","components/friendList/FriendList.module.css","components/transactionHistory/TransactionHistory.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/FriendList.js","components/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","generateColor","Math","floor","random","toString","Profile","name","tag","location","avatar","stats","className","styles","profile","src","alt","style","backgroundColor","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","stat","item","key","id","percentage","FriendList","friends","friend_list","elem","isOnline","onLine","offLine","width","TransactionHistory","items","transaction_history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad8f098e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ousS\",\"avatar\":\"Profile_avatar__bRuUX\",\"name\":\"Profile_name__1OZC7\",\"tag\":\"Profile_tag__1Rb4m\",\"location\":\"Profile_location__1WPy6\",\"stats\":\"Profile_stats__3iuv_\",\"label\":\"Profile_label__3LIzw\",\"quantity\":\"Profile_quantity__3L7Ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2ZiGB\",\"title\":\"Statistics_title__3FF4J\",\"stat_list\":\"Statistics_stat_list__1-dJx\",\"item\":\"Statistics_item__2g2sA\",\"label\":\"Statistics_label__2VZp2\",\"percentage\":\"Statistics_percentage__sY6Dm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__2VIsp\",\"item\":\"FriendList_item__Rnfso\",\"avatar\":\"FriendList_avatar__3zLaF\",\"name\":\"FriendList_name__37OKA\",\"onLine\":\"FriendList_onLine__j_sV6\",\"offLine\":\"FriendList_offLine__1mRc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__1Ffz2\"};","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction generateColor() {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nexport const Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className=\"description\">\r\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li style={{ backgroundColor: `${generateColor()}` }}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li style={{ backgroundColor: `${generateColor()}` }}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li style={{ backgroundColor: `${generateColor()}` }}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  friends: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction generateColor() {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nexport const Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.stat_list}>\r\n      {stats.map(stat => (\r\n        <li\r\n          className={styles.item}\r\n          key={stat.id}\r\n          style={{ backgroundColor: `${generateColor()}` }}\r\n        >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport styles from './FriendList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const FriendList = ({ friends }) => (\r\n  <ul className={styles.friend_list}>\r\n    {friends.map(elem => (\r\n      <li className={styles.item} key={elem.id}>\r\n        <span className={elem.isOnline ? styles.onLine : styles.offLine}></span>\r\n        <img\r\n          className={styles.avatar}\r\n          src={elem.avatar}\r\n          alt={elem.name}\r\n          width=\"48\"\r\n        />\r\n        <p className={styles.name}>{elem.name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport styles from './TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TransactionHistory = ({ items }) => (\r\n  <table className={styles.transaction_history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf({\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Profile } from './profile/Profile';\r\nimport { Statistics } from './statistics/Statistics';\r\nimport { FriendList } from './friendList/FriendList';\r\nimport { TransactionHistory } from './transactionHistory/TransactionHistory';\r\nimport user from './profile/user.json';\r\nimport statisticalData from './statistics/statistical-data.json';\r\nimport friends from './friendList/friends.json';\r\nimport transactions from './transactionHistory/transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}